<?xml version="1.0" encoding="UTF-8"?>
<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
           xmlns:cm="http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.1.0"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xsi:schemaLocation="http://www.osgi.org/xmlns/blueprint/v1.0.0 http://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd
           http://camel.apache.org/schema/blueprint http://camel.apache.org/schema/blueprint/camel-blueprint.xsd">

    <bean id="mysqlthedataDS" class="com.mysql.jdbc.jdbc2.optional.MysqlDataSource">
        <property name="serverName" value="mysql-test.cniyuo94cdas.eu-west-1.rds.amazonaws.com"/>
        <property name="databaseName" value="thedata"/>
        <property name="port" value="3306"/>
        <property name="user" value="admocp"/>
        <property name="password" value="##admocp" />
    </bean>

    <service ref="mysqlthedataDS" interface="javax.sql.DataSource" ranking="5">
        <service-properties>
            <entry key="osgi.jndi.service.name" value="jdbc/mysqlthedata"/>
        </service-properties>
    </service>

    <bean id="sql" class="org.apache.camel.component.sql.SqlComponent">
        <property name="dataSource" ref="mysqlthedataDS" />
    </bean>

    <bean id="listAggregation" class="aggregationStrategy.ListAggregationStrategy"/>

    <camelContext id="atalayaEIP" xmlns="http://camel.apache.org/schema/blueprint" useMDCLogging="true">

        <propertyPlaceholder id="properties"
                             location="classpath:etc/uri.properties"
                             xmlns="http://camel.apache.org/schema/blueprint" />

        <streamCaching id="CacheConfig" bufferSize="100024000"
                       spoolThreshold="100024000" />

        <threadPoolProfile id="concurrentProfile" poolSize="50" maxPoolSize="80" maxQueueSize="-1"/>

        <dataFormats>
            <json id="json" library="Jackson" unmarshalTypeName="java.util.Map"/>
            <bindy id="csvt100" type="Csv" classType="csv.T100"/>
            <bindy id="csvwbcrossgt" type="Csv" classType="csv.WBCROSSGT"/>
            <json id="t100_json" library="Jackson" unmarshalTypeName="json.t100"/>
            <json id="wbcrossgt_json" library="Jackson" unmarshalTypeName="json.wbcrossgt"/>
        </dataFormats>

        <restConfiguration apiContextListing="true"
                           apiContextPath="api-docs" bindingMode="off" component="netty4-http"
                           contextPath="camel" enableCORS="true" host="0.0.0.0" port="8282">

            <endpointProperty key="chunkedMaxContentLength" value="10444800"/>
            <dataFormatProperty key="prettyPrint" value="true" />

            <apiProperty key="base.path" value="rest" />
            <apiProperty key="api.version" value="0.0.1" />
            <apiProperty key="api.title" value="Data Integration Platform" />
            <apiProperty key="api.description" value="Data Integration API" />
            <apiProperty key="api.contact.name" value="Atalaya Consulting" />
            <apiProperty key="cors" value="true" />
        </restConfiguration>

        <rest path="/1.0" produces="application/json">
            <description>Data Integration API</description>
            <get uri="/runsql">
                <description>check tables</description>
                <responseMessage code="200" message="Ok" />
                <responseMessage code="404" message="Error, no hi ha taules" />
                <route id="getTablesT100">
                    <log message="ok"/>
                </route>
            </get>
            <put uri="/runsql">
                <description>create tables</description>
                <responseMessage code="200" message="Ok" />
                <responseMessage code="404" message="Error, No s'han pogut crear les taules" />
                <route id="createTablesT100">
                    <log message="ok"/>
                </route>
            </put>
            <delete uri="/runsql" produces="application/json">
                <description>delete tables</description>
                <responseMessage code="200" message="Ok" />
                <responseMessage code="404" message="Error, No s'han pogut eliminar les taules" />
                <route id="dropTablesT100">
                    <log message="ok"/>
                </route>
            </delete>
            <post uri="/transfer" produces="application/json">
                <description>load data</description>
                <responseMessage code="200" message="Ok" />
                <responseMessage code="404" message="Error, No s'han pogut insertar les dades" />
                <route id="loadData" streamCache="true">
                    <log message="${date:now:yyyy-MM-dd'T'HH:mm:ss:SSS}: Start Loading data into Database"/>
                    <split streaming="true" parallelProcessing="true" executorServiceRef="concurrentProfile">
                        <tokenize token="\n"/>
                        <convertBodyTo type="String"/>
                        <unmarshal ref="csvt100"/>
                        <marshal ref="t100_json"/>
                        <to uri="{{t100csvMQ}}"/>
                    </split>

                    <setBody>
                        <simple>{"date": ${date:now:yyyy-MM-dd'T'HH:mm:ss:SSS}, "message": "Loaded data into Database"}</simple>
                    </setBody>
                    <unmarshal ref="json"/>
                </route>
            </post>
        </rest>

        <route autoStartup="true" id="aggregateT100" streamCache="true">
            <from uri="{{t100csvMQ}}"/>
            <!--<transacted ref="PROPAGATION_REQUIRED"/>-->
            <unmarshal ref="json"/>
            <validate>
                <simple>${body} is 'java.util.Map'</simple>
            </validate>
            <aggregate id="aggregateT100" parallelProcessing="true" completionTimeout="1000" forceCompletionOnStop="true" strategyRef="listAggregation" completionSize="100">
                <correlationExpression>
                    <constant>true</constant>
                </correlationExpression>
                <setHeader headerName="aggregate">
                    <constant></constant>
                </setHeader>
                <log message="inserting... ${body}"/>
                <setBody>
                    <simple>
                        UPDATE CAMEL_TEST SET STATUS='DONE' WHERE ID=:?camelTestId
                    </simple>
                </setBody>
                <to uri="jdbc:dataSource?useHeadersAsParameters=true"/>
                <to uri="sql:insert into T100 (SPRSL, MSG, MSGNR, TEXT, BIG_TRANSFERDATE, BIG_TRANSFERTIME, BIG_TRANSFERTSTAMP) values (':#sprsl', ':#msg', ':#msgnr', ':#text', ':#big_TRANSFERDATE', ':#big_TRANSFERTIME', ':#big_TRANSFERTSTAMP')?batch=true&amp;dataSourceRef=mysqlthedataDS"/>
            </aggregate>
        </route>

        <route autoStartup="true" id="aggregateWbcrossgt" streamCache="true">
            <from uri="{{wbcrossgtcsvMQ}}"/>
            <!--<transacted ref="PROPAGATION_REQUIRED"/>-->
            <unmarshal ref="json"/>
            <validate>
                <simple>${body} is 'java.util.Map'</simple>
            </validate>
            <aggregate id="aggregateWbcrossgt"  parallelProcessing="true" completionTimeout="5000" forceCompletionOnStop="true" strategyRef="listAggregation" completionSize="50">
                <correlationExpression>
                    <constant>true</constant>
                </correlationExpression>
                <setHeader headerName="aggregate">
                    <constant></constant>
                </setHeader>
                <!--<to uri="sql:insert into WBCROSSGT (OTYPE, NAME, INCLUDE, DIRECT, INDIRECT, COMPONENT, ISHASH, UDATE, UZEIT, UNAME, BIG_TRANSFERDATE, BIG_TRANSFERTIME, BIG_TRANSFERTSTAMP) values (':#otype', ':#name', ':#include', ':#direct', ':#indirect', ':#component', ':#ishash',  ':#udate', ':#uzeit', ':#uname', ':#big_TRANSFERDATE', ':#big_TRANSFERTIME', ':#big_TRANSFERTSTAMP')?batch=true&amp;dataSourceRef=atalayaDs"/>-->
            </aggregate>
        </route>

    </camelContext>

    <!-- TX configuration
    <bean id="transactionManager" class="org.springframework.jms.connection.JmsTransactionManager">
        <property name="connectionFactory" ref="pooledJmsConnectionFactory"/>
    </bean>

    <bean id="PROPAGATION_REQUIRED" class="org.apache.camel.spring.spi.SpringTransactionPolicy">
        <property name="transactionManager" ref="transactionManager"/>
        <property name="propagationBehaviorName" value="PROPAGATION_REQUIRED"/>
    </bean>
-->
    <!-- JMS configuration
    <bean id="pooledJmsConnectionFactory" class="org.apache.activemq.pool.PooledConnectionFactory" init-method="start" destroy-method="stop">
        <property name="maxConnections" value="8" />
        <property name="connectionFactory" ref="jmsConnectionFactory" />
    </bean>

    <bean id="jmsConnectionFactory" class="org.apache.activemq.ActiveMQConnectionFactory">
        <property name="brokerURL" value="tcp://localhost:61616"/>
        <property name="userName" value="karaf" />
        <property name="password" value="karaf" />
        <property name="redeliveryPolicy">
            <bean class="org.apache.activemq.RedeliveryPolicy">
                <property name="maximumRedeliveries" value="0"/>
            </bean>
        </property>
    </bean>
-->
    <!-- JMS configuration with transactions
    <bean id="activemqTx" class="org.apache.activemq.camel.component.ActiveMQComponent">
        <property name="connectionFactory" ref="pooledJmsConnectionFactory"/>
        <property name="transacted" value="true"/>
        <property name="transactionManager" ref="transactionManager"/>
    </bean>-->

    <!-- JMS configuration for test enqueue/dequeue without transactions
    <bean id="activemq" class="org.apache.activemq.camel.component.ActiveMQComponent">
        <property name="connectionFactory" ref="pooledJmsConnectionFactory"/>
        <property name="transacted" value="false"/>
    </bean>-->

</blueprint>